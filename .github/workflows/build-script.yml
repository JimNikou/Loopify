name: CI / APK Build

# Triggers the workflow on push to the "main" branch
on:
  push:
    branches:
      - main  # Trigger on merge to main branch
  workflow_dispatch: # Allows you to manually trigger this workflow if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools-version: 34.0.0

      # Grant execute permission for Gradle Wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Build APK
      - name: Build APK
        run: ./gradlew assembleRelease

      # Get current version from version.txt
      - name: Get current version
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Increment version number
      - name: Increment version
        id: increment_version
        run: |
          # Get the current version number from the version.txt file
          VERSION=$(cat version.txt)
          
          # Extract the major, minor, and patch version numbers
          IFS='.' read -r major minor patch <<< "$VERSION"
          
          # Increment the patch number
          patch=$((patch + 1))

          # Create the new version string
          new_version="$major.$minor.$patch"
          
          # Update the version.txt file with the new version
          echo $new_version > version.txt
          
          # Output the new version
          echo "New version: $new_version"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      # Create changelog file (CHANGELOG.mb)
      - name: Create changelog (CHANGELOG.mb)
        run: |
          echo "## Changelog" > CHANGELOG.mb
          echo "### Version ${{ env.NEW_VERSION }}" >> CHANGELOG.mb
          echo "" >> CHANGELOG.mb
          echo "This is the changelog for version ${{ env.NEW_VERSION }}" >> CHANGELOG.mb

      # Commit and create a new version tag
      - name: Commit version.txt and create new tag
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          # Commit the updated version.txt file
          git add version.txt
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"

          # Create a new tag for the release
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version ${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      # Create GitHub release and upload APK + changelog
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/release/app-release-unsigned.apk
            CHANGELOG.mb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the version.txt as an artifact (optional)
      - name: Upload version.txt
        uses: actions/upload-artifact@v4
        with:
          name: version-file
          path: version.txt
