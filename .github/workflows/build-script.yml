name: CI / APK Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools-version: 34.0.0

      # Grant execute permission for Gradle Wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Build APK
      - name: Build APK
        run: ./gradlew assembleRelease

      # Get current version from version.txt
      - name: Get current version
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Increment version if needed
      - name: Increment version if needed
        id: increment_version
        run: |
          git fetch --tags

          VERSION=$(cat version.txt)
          IFS='.' read -r major minor patch <<< "$VERSION"

          while git ls-remote --tags origin | grep -q "refs/tags/v$major.$minor.$patch"; do
            patch=$((patch + 1))
          done

          NEW_VERSION="$major.$minor.$patch"
          echo "$NEW_VERSION" > version.txt
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Commit version.txt and create new tag
      - name: Commit and create new tag
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          # Commit the updated version.txt
          git add version.txt
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"

          # Create and push the new tag with 'v' prefix
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version v${{ env.NEW_VERSION }}"
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      # Create GitHub release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.NEW_VERSION }}"  # Include the 'v' prefix
          name: "v${{ env.NEW_VERSION }}"     # Name the release with the same tag
          files: |
            app/build/outputs/apk/release/app-release-unsigned.apk
            CHANGELOG.mb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create changelog (CHANGELOG.mb)
      - name: Create changelog
        run: |
          echo "## Changelog" > CHANGELOG.mb
          echo "### Version ${{ env.NEW_VERSION }}" >> CHANGELOG.mb
          echo "" >> CHANGELOG.mb
          echo "This is the changelog for version ${{ env.NEW_VERSION }}" >> CHANGELOG.mb

      # Upload version.txt as an artifact
      - name: Upload version.txt
        uses: actions/upload-artifact@v4
        with:
          name: version-file
          path: version.txt
