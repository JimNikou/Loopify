# This is a basic workflow to help you get started with Actions

name: CI / APK Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Step 3: Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34   # Specify the Android API level you need
          build-tools-version: 34.0.0  # Specify the build tools version

      # Step 4: Grant execute permission for Gradle Wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Step 5: Build the APK
      - name: Build APK
        run: ./gradlew assembleRelease

      # Step 6: Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: loopify-release.apk
          path: app/build/outputs/apk/release/app-release.apk
